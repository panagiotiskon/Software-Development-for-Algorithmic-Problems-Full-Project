Κ23γ: Ανάπτυξη Λογισμικού για Αλγοριθμικά Προβλήματα 


Χειμερινό εξάμηνο 2022-23 


3η Προγραμματιστική Εργασία Βελτιστοποίηση πολυγωνοποίησης σημειοσυνόλου βέλτιστης επιφάνειας, ανάπτυξη εφαρμογής για τη συγκριτική αξιολόγηση των αλγορίθμων πολυγωνοποίησης και διαγωνισμός.


Παναγιώτης Κοντοειδής 1115201900266
Στέλιος Δημητριάδης 1115201900050








Τα αρχεία που περιλαμβάνονται ειναι τα εξης:


PROJECT_3.cpp
CMakeLists.txt
output.txt
output_polygon.txt
output_polygon_subdiv.txt
PROJECT_output.txt
data/uniform
include/Area_maximization_minimization.cpp
include/Area_maximization_minimization.hpp
include/CMakeLists.txt
README.txt
README.pdf
.git














Οδηγίες μεταγλώττισης του προγράμματος:


1.
cmake -DCGAL_DIR=$CMAKE_INSTALLED_PREFIX/lib/CGAL
-DCMAKE_BUILD_TYPE=Release .


2.        
make


3.
        ./PROJECT_3 -i data/uniform/ -o PROJECT_output.txt






Αξιοσημείωτες         βελτιστοποιήσεις που εφαρμόστηκαν στους αλγορίθμους της πρώτης και της δεύτερης εργασίας είναι:


* Αυξητικός Αλγόριθμος.


Περιορισμός του συνόλου αναζήτησης κόκκινων ακμών στο σύνολο των ακμών της εκάστοτε πολυγωνικής αλυσίδας.


* Αλγόριθμος με Βάση το ΚΠ.


Μείωση των ελέγχων για την εύρεση ορατών ακμών από ένα επιλεγμένο ορατό εσωτερικό σημείο


* Τοπική Αναζήτηση. 


Περαιτέρω ελεγχος των τμημάτων της πολυγωνικής αλυσίδας που μπορούν να αλλάξουν θέση στην πολυγωνική αλυσίδα και ο περιορισμός του συνόλου αυτών, αποφεύγοντας την περιττή κατασκευή μεγάλου αριθμού μη απλών πολυγώνων. 


* Προσομοιωμένη Ανόπτηση.


Local
Περιορισμός για αναζήτηση ορατών ακμών από την δημιουργία των νέων σημείων.


Global


Μειωση των επαναλήψεων για την εύρεση των σημείων q και r και μείωση των επαναλήψεων για τον έλεγχο των interceptions.






Στο PROJECT_output.txt βρίσκονται τα τελικά αποτελέσματα για τον φάκελο των αρχείων που δόθηκε.


Αρχικά, με την σειρά αναγράφονται οι συνδυασμοί των αλγορίθμων  που εκτελούνται. Στην πρώτη στήλη τυπώνεται το σύνολο των σημείων για κάθε αρχείο και στις υπόλοιπες στήλες έχουμε τα min και max score. Τα min και max score είναι ο μέσος όρος των ratio που προκύπτουν από την εκτέλεση του εκάστοτε αλγορίθμου, για ελάχιστο  και μέγιστο  εμβαδόν αντίστοιχα. Έπειτα, τυπώνονται τα min και max bound δηλαδή, το μεγαλύτερο και το  μικρότερο ratio αντίστοιχα, από τα αποτελέσματα μας. Όταν δεν αναγράφεται κάποιο ratio σε κάποια στήλη σημαίνει ότι υπάρχει ισοβαθμία μεταξύ των τιμών.


Σχετικά με το στάδιο της προεπεξεργασίας, επιλέγονται προκαθορισμένες τιμές για τις παραμέτρους των αλγορίθμων. Οι τιμές αυτές καθορίστηκαν από την μελέτη της αποδοτικότητας και της ταχύτητας των αλγορίθμων της πρώτης και της δεύτερης εργασίας. Συγκεκριμένα, στον αλγόριθμο της τοπικής αναζήτησης τα αρχεία με μικρό αριθμό σημειοσυνόλων επιλέγεται ένα αρκετά μεγάλο L ( = 4 ) αφού δεν επηρεάζεται σε μεγάλο βαθμο ο χρόνος εκτέλεσης και δεν εξαντλείται το cutoff ενώ σε αρχεία με μεγάλο αριθμό σημειοσυνόλων ( >100 ) επιλέγεται ένα μικρότερο L ( = 2 ) για να μην εξαντλείται το cutoff. Επίσης, το threshold που έχει επιλεχθεί είναι το 0.1 για την βέλτιστη ακρίβεια των αποτελεσμάτων. 


Στον αλγόριθμο της Προσομοιωμένης Ανόπτησης χρησιμοποιείται μικρότερο L(=200) σε αρχεία με μικρό αριθμό σημειοσυνόλων καθως δεν χρειάζονται πολλά iterations για να προκύψει ένα καλό αποτέλεσμα. Ενώ σε αρχεία με μεγάλο αριθμό σημειοσυνόλων χρησιμοποιείται L(=500) για την βέλτιστη ακρίβεια των αποτελεσμάτων. Τέλος για αρχεία με  πάρα πολλά σημεία χρησιμοποιείται L(=1000) για ακόμα μεγαλύτερη ακρίβεια.


Συμπεράσματα που προκύπτουν από το αρχείο PROJECT_output.txt


Ξεκινώντας με τον συνδυασμό του αλγορίθμου της Τοπικής Αναζήτησης με τον Convex Hull αποφέρει καλύτερα max και min score από τον τον συνδυασμό της Τοπικής Αναζήτησης με τον Αυξητικό και σε αρχεία με μικρό αλλά και μεγάλο αριθμό σημειοσυνόλων. Επιπρόσθετα, οι διαφορετικοί τρόποι αρχικοποίησης των σημειοσυνόλων δεν έχουν κάποια αξιοσημείωτη διαφορά στα αποτελέσματα μεταξύ τους.


Για τον αλγόριθμο της Προσομοιωμένης Ανόπτησης ο συνδυασμός του local με Convex Hull βγάζει καλύτερα αποτελέσματα στο min score και o global βγάζει καλύτερα αποτελέσματα στο max score. Για random παρατηρούνται παρόμοια ratio μεταξύ local και global σε αντίθεση με τα min και max όπου, με global τα ratio είναι μεγαλύτερα από ότι με local και για max τα ratio με local είναι μεγαλύτερα από τα global. 


Ο συνδυασμός της Προσομοιωμένης Ανόπτησης με τον Αυξητικό Αλγόριθμο εμφανίζει μεγαλύτερα ratio από ότι με Convex Hull. Η αρχικοποίηση των σημειοσυνόλων με 2b παρουσιάζει μικρότερα ratio σε σχέση με τον Convex Hull. Παράλληλα,  με local τα ratio έχουν μικρότερα min score απ’ ότι με global και ταυτόχρονα ο global έχει τα μεγαλύτερα max score.


Ο μοναδικός συνδυασμός που δεν χρησιμοποιήθηκε είναι ο αλγόριθμος Convex Hull με την Προσομοιωμένη Ανόπτηση global καθώς, ξεπερνάει επανειλημμένα το cutoff. 


Τέλος, συγκρίνοντας τα αποτελέσματα όλων των δυνατών συνδυασμών προκύπτει ότι ο βέλτιστος συνδυασμός, από άποψη απόδοσης, είναι αυτός της Τοπικής Αναζήτησης με τον αλγόριθμο με Βάση το ΚΠ.